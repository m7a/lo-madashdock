# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})

[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"

[agent]
  interval = "15s"

  ## Rounds collection interval to 'interval'
  round_interval = true

  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  metric_buffer_limit = 10000

  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"

  # debug = false
  # quiet = false

  hostname = "telegraf1"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]

  ## The target database for metrics; will be created as needed.
  database = "telegraf1"

  skip_database_creation = true
  timeout = "10s"

  ## HTTP Basic Auth
  username = "masysmawriter"
  password = "${MASYSMAWRITER_PASSWORD}"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.ping]]
  urls = ["8.8.4.4"]
  method = "native"
  count = 1
  timeout = 1.0
  deadline = 5

[[inputs.ping]]
  interval = 60.0
  urls = ["www.microsoft.com", "masysma.lima-city.de", "de.youtube.com"]
  method = "native"
  count = 2
  ping_interval = 1.0
  timeout = 0.5
  deadline = 3

[[inputs.http_response]]
  interval = 600.0
  urls = ["https://www.zoom.us", "https://www.telekom.de/start"]
  response_timeout = "4s"
  method = "GET"
  follow_redirects = false

[[inputs.http_response]]
  interval = 120.0
  urls = ["https://masysma.lima-city.de/31/web_main.xhtml"]
  response_timeout = "4s"
  method = "GET"
  response_string_match = "<h1>Ma_Sys.ma Startseite"
  follow_redirects = false

# -> https://gist.github.com/Maddosaurus/d30535ee012c2e86c7813c1c71e3b00a
# Exec a speedtest every 5 minutes
# Required: speedtest-cli (pip install speedtest-cli) - https://github.com/sivel/speedtest-cli
#[[inputs.exec]]
#  interval = "300s"
#
#  # Shell/commands array
#  # Full command line to executable with parameters, or a glob pattern to run all matching files.
#  commands = ["/usr/local/bin/speedtest-cli --json"]
#
#  ## Timeout for each command to complete.
#  timeout = "60s"
#
#  # Data format to consume.
#  # NOTE json only reads numerical measurements, strings and booleans are ignored.
#  data_format = "json"
#
#  # measurement name suffix (for separating different commands)
#  name_suffix = "_speedtest"
